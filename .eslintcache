[{"C:\\Users\\orna\\vscodeprojects\\final_projectCM\\src\\index.js":"1","C:\\Users\\orna\\vscodeprojects\\final_projectCM\\src\\harmMachine.js":"2","C:\\Users\\orna\\vscodeprojects\\final_projectCM\\src\\melodyMachine.js":"3","C:\\Users\\orna\\vscodeprojects\\final_projectCM\\src\\generator.js":"4"},{"size":8868,"mtime":1614278039412,"results":"5","hashOfConfig":"6"},{"size":4288,"mtime":1614279589922,"results":"7","hashOfConfig":"6"},{"size":5965,"mtime":1613554354598,"results":"8","hashOfConfig":"6"},{"size":1595,"mtime":1614279250242,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hai7qw",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\orna\\vscodeprojects\\final_projectCM\\src\\index.js",[],"C:\\Users\\orna\\vscodeprojects\\final_projectCM\\src\\harmMachine.js",["19","20"],"C:\\Users\\orna\\vscodeprojects\\final_projectCM\\src\\melodyMachine.js",["21"],"class NotesToChord {\n  constructor(notes, chords) {\n    this.notes = notes;\n    this.chords = chords;\n  }\n}\n\nclass MelodyMachine {\n  constructor() {\n    this.notesToChordList = [\n      new NotesToChord([-1, \"C\"], { C: 0.33, F: 0.33, Am: 0.33 }),\n      new NotesToChord([-1, \"D\"], { Dm: 0.33, G: 0.33, Bdim: 0.33 }),\n      new NotesToChord([-1, \"E\"], { Em: 0.33, C: 0.33, Am: 0.33 }),\n      new NotesToChord([-1, \"F\"], { F: 0.33, Dm: 0.33, Bdim: 0.33 }),\n      new NotesToChord([-1, \"G\"], { G: 0.33, Em: 0.33, C: 0.33 }),\n      new NotesToChord([-1, \"A\"], { Am: 0.33, F: 0.33, C: 0.33 }),\n      new NotesToChord([-1, \"B\"], { Bdim: 0.33, G: 0.33, Em: 0.33 }),\n      new NotesToChord([-1, -1], { C: 0.33, Am: 0.33, G: 0.33 }),\n\n      //C\n      new NotesToChord([\"C\", \"C\"], { C: 0.33, Am: 0.33, F: 0.33 }),\n      new NotesToChord([\"C\", \"D\"], { C: 0.33, Am: 0.33, Dm: 0.33 }),\n      new NotesToChord([\"C\", \"E\"], { C: 0.33, Am: 0.33, Em: 0.33 }),\n      new NotesToChord([\"C\", \"F\"], { F: 0.33, Dm: 0.33, Fm: 0.33 }),\n      new NotesToChord([\"C\", \"G\"], { C: 0.33, Cm: 0.33, Ab: 0.33 }),\n      new NotesToChord([\"C\", \"A\"], { Am: 0.33, F: 0.33, \"F#dim\": 0.33 }),\n      new NotesToChord([\"C\", \"B\"], { C: 0.33, Am: 0.33, Em: 0.33 }),\n      new NotesToChord([\"C\", -1], { C: 0.5, Am: 0.33, F: 0.33 }),\n\n      //D\n      new NotesToChord([\"D\", \"C\"], { Dm: 0.33, F: 0.33, Am: 0.33 }),\n      new NotesToChord([\"D\", \"D\"], { Dm: 0.33, G: 0.5, Bdim: 0.33 }),\n      new NotesToChord([\"D\", \"E\"], { Dm: 0.33, C: 0.33, Am: 0.33 }),\n      new NotesToChord([\"D\", \"F\"], { Dm: 0.33, Bb: 0.33, Bdim: 0.33 }),\n      new NotesToChord([\"D\", \"G\"], { G: 0.33, Em: 0.33, C: 0.33 }),\n      new NotesToChord([\"D\", \"A\"], { Dm: 0.33, Bdim: 0.33, D: 0.33 }),\n      new NotesToChord([\"D\", \"B\"], { Bdim: 0.33, G: 0.33, Dm: 0.33 }),\n      new NotesToChord([\"D\", -1], { Dm: 0.33, G: 0.33, Bdim: 0.33 }),\n\n      //E\n      new NotesToChord([\"E\", \"C\"], { C: 0.33, Am: 0.33, Em: 0.33 }),\n      new NotesToChord([\"E\", \"D\"], { Em: 0.33, G: 0.33, C: 0.33 }),\n      new NotesToChord([\"E\", \"E\"], { C: 0.5, Am: 0.33, Em: 0.33 }),\n      new NotesToChord([\"E\", \"F\"], { C: 0.33, Am: 0.33, F: 0.33 }),\n      new NotesToChord([\"E\", \"G\"], { Em: 0.33, C: 0.33, Am: 0.33 }),\n      new NotesToChord([\"E\", \"A\"], { Am: 0.33, F: 0.33, A: 0.33 }),\n      new NotesToChord([\"E\", \"B\"], { Em: 0.33, E: 0.33, C: 0.33 }),\n      new NotesToChord([\"E\", -1], { Em: 0.33, C: 0.33, Am: 0.33 }),\n\n      //F\n      new NotesToChord([\"F\", \"C\"], { F: 0.33, Fm: 0.33, Dm: 0.33 }),\n      new NotesToChord([\"F\", \"D\"], { Dm: 0.33, Bdim: 0.33, Bb: 0.33 }),\n      new NotesToChord([\"F\", \"E\"], { F: 0.33, Dm: 0.33, F: 0.33 }),\n      new NotesToChord([\"F\", \"F\"], { F: 0.33, Dm: 0.5, Bdim: 0.33 }),\n      new NotesToChord([\"F\", \"G\"], { F: 0.33, G: 0.33, Dm: 0.33 }),\n      new NotesToChord([\"F\", \"A\"], { F: 0.33, Bdim: 0.33, Dm: 0.33 }),\n      new NotesToChord([\"F\", \"B\"], { Bdim: 0.33, Em: 0.33, G: 0.33 }),\n      new NotesToChord([\"F\", -1], { F: 0.33, Dm: 0.33, Bdim: 0.33 }),\n\n      //G\n      new NotesToChord([\"G\", \"C\"], { G: 0.33, Am: 0.33, Cm: 0.33 }),\n      new NotesToChord([\"G\", \"D\"], { G: 0.33, Em: 0.33, C: 0.33 }),\n      new NotesToChord([\"G\", \"E\"], { C: 0.33, Em: 0.33, Am: 0.33 }),\n      new NotesToChord([\"G\", \"F\"], { F: 0.33, Dm: 0.33, G: 0.33 }),\n      new NotesToChord([\"G\", \"G\"], { G: 0.33, C: 0.5, Em: 0.33 }),\n      new NotesToChord([\"G\", \"A\"], { C: 0.33, Am: 0.33, Em: 0.33 }),\n      new NotesToChord([\"G\", \"B\"], { G: 0.33, Em: 0.33, C: 0.33 }),\n      new NotesToChord([\"G\", -1], { G: 0.33, C: 0.33, Em: 0.33 }),\n\n      //A\n      new NotesToChord([\"A\", \"C\"], { Am: 0.33, F: 0.33, Dm: 0.33 }),\n      new NotesToChord([\"A\", \"D\"], { Dm: 0.33, Am: 0.33, D: 0.33 }),\n      new NotesToChord([\"A\", \"E\"], { Am: 0.33, C: 0.33, \"F#dim\": 0.33 }),\n      new NotesToChord([\"A\", \"F\"], { F: 0.33, Dm: 0.33, Bdim: 0.33 }),\n      new NotesToChord([\"A\", \"G\"], { Am: 0.33, Em: 0.33, C: 0.33 }),\n      new NotesToChord([\"A\", \"A\"], { Am: 0.33, F: 0.5, Dm: 0.33 }),\n      new NotesToChord([\"A\", \"B\"], { Am: 0.33, Bdim: 0.33, Em: 0.33 }),\n      new NotesToChord([\"A\", -1], { Am: 0.33, Dm: 0.33, F: 0.33 }),\n\n      //B\n      new NotesToChord([\"B\", \"C\"], { C: 0.33, Bdim: 0.33, Em: 0.33 }),\n      new NotesToChord([\"B\", \"D\"], { Bdim: 0.33, G: 0.33, Em: 0.33 }),\n      new NotesToChord([\"B\", \"E\"], { Em: 0.33, E: 0.33, C: 0.33 }),\n      new NotesToChord([\"B\", \"F\"], { Bdim: 0.33, Em: 0.33, G: 0.33 }),\n      new NotesToChord([\"B\", \"G\"], { G: 0.33, Em: 0.33, C: 0.33 }),\n      new NotesToChord([\"B\", \"A\"], { Am: 0.33, Bdim: 0.33, Em: 0.33 }),\n      new NotesToChord([\"B\", \"B\"], { Bdim: 0.33, G: 0.33, Em: 0.33 }),\n      new NotesToChord([\"B\", -1], { Bdim: 0.33, G: 0.33, Em: 0.33 }),\n    ];\n  }\n\n  cartesian = (...a) =>\n    a.reduce((a, b) => a.flatMap((d) => b.map((e) => [d, e].flat())));\n\n  getChordsForMelody(notes) {\n    let possibleChordsList = [];\n    //get list of notes - input melody\n    //return - all possible chords progressions.\n    for (let i = 0; i < notes.length; i++) {\n      if (i % 2 === 1) continue;\n      let possibleChords = this.notesToChordList.find(\n        (e) => e.notes[0] === notes[i] && e.notes[1] === notes[i + 1]\n      );\n      if (possibleChords !== undefined) {\n        possibleChordsList.push(\n          Object.keys(possibleChords.chords).map((item) => item)\n        );\n      }\n    }\n    \n    let progressions = this.cartesian(\n      possibleChordsList[0],\n      possibleChordsList[1]\n    );\n\n    for (let i = 2; i < possibleChordsList.length; i++) {\n      progressions = this.cartesian(progressions, possibleChordsList[i]);\n    }\n\n    return progressions;\n  }\n\n  // getNMaxLikelyChords(notes, N) {\n  //   let ans = this.notesToChordList.find(\n  //     (e) => e.notes[0] === notes[0] && e.notes[1] === notes[1]\n  //   );\n\n  //   ans = Object.keys(ans.chords).sort((a, b) => ans.chords[b] - ans.chords[a]);\n  //   ans = N < 0 || N >= ans.length ? ans : ans.slice(0, N);\n  //   return ans;\n  // }\n}\nexport default MelodyMachine;\n","C:\\Users\\orna\\vscodeprojects\\final_projectCM\\src\\generator.js",[],{"ruleId":"22","severity":1,"message":"23","line":80,"column":31,"nodeType":"24","messageId":"25","endLine":80,"endColumn":33},{"ruleId":"22","severity":1,"message":"23","line":90,"column":29,"nodeType":"24","messageId":"25","endLine":90,"endColumn":31},{"ruleId":"26","severity":1,"message":"27","line":53,"column":57,"nodeType":"28","messageId":"29","endLine":53,"endColumn":58},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-dupe-keys","Duplicate key 'F'.","ObjectExpression","unexpected"]